<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>jar</packaging>
    <name>${artifactId}</name>
    <description>${artifactId}</description>

    <properties>
        <fuse.version>7.4.0.fuse-740036-redhat-00002</fuse.version>
        <camel.version>2.21.0.fuse-740039-redhat-00001</camel.version>
        <swagger.ui.version>3.23.5</swagger.ui.version>
        <openapi.codegen.version>4.1.3</openapi.codegen.version>
        <logstash.encoder.version>6.2</logstash.encoder.version>
        <javax.activation.version>1.2.1</javax.activation.version>
        <jaxb.api.version>2.3.2</jaxb.api.version>
#if (${cxfSupport} == 'true')
        <wss4j.version>2.2.3.redhat-00001</wss4j.version>
#end
        
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>

        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.redhat-fuse</groupId>
                <artifactId>fuse-springboot-bom</artifactId>
                <version>${fuse.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Base -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- autoreload on changes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>

        <!-- Camel Spring-Boot starter-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>

        <!--Camel Servlet starter -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>

        <!-- Camel suppport for calling REST services through http4 -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http4</artifactId>
        </dependency>

        <!-- Swagger support for REST DSL -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-swagger-java-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${swagger.ui.version}</version>
        </dependency>

        <!-- Parsing rendering support -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-saxon-starter</artifactId>
        </dependency>

#if (${cxfSupport} == 'true')
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-soap</artifactId>
        </dependency>

        <!--Camel CXF starter -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf-starter</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-policy</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.wss4j</groupId>
            <artifactId>wss4j</artifactId>
            <version>${wss4j.version}</version>
            <type>pom</type>
        </dependency>
#end

        <!-- Circuit breaker-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hystrix-starter</artifactId>
        </dependency>

        <!-- For database access -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-sql-starter</artifactId>
        </dependency>

        <!-- Aggregated logs using JSON -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash.encoder.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <defaultGoal>spring-boot:run</defaultGoal>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jboss.redhat-fuse</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>${fuse.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jboss.redhat-fuse</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${fuse.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <profiles>
                        <profile>dev</profile>
                    </profiles>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jdk9+-build</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun.activation</groupId>
                    <artifactId>javax.activation</artifactId>
                    <version>${javax.activation.version}</version>
                </dependency>

                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-core</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                    <version>${jaxb.api.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>ocp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.redhat-fuse</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Generate code from an openapi definition -->
        <profile>
            <id>swaggergen</id>
            <build>
                <plugins>
                    <!-- Generate camel-rest.xml from an openapi definition -->
                    <plugin>
                        <groupId>org.apache.camel</groupId>
                        <artifactId>camel-restdsl-swagger-plugin</artifactId>
                        <version>${camel.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <goals>
                                    <goal>generate-xml</goal>
                                </goals>
                                <configuration>
                                    <specificationUri>src/main/resources/api-definitions/basic-api.yaml</specificationUri>
                                    <outputDirectory>${project.build.directory}/generated-sources/camel-rest</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Include generated camel-rest.xml in build; should be done 
                         by camel-restdsl-swagger-plugin, but isn't --> 
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes/camel-rest</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/generated-sources/camel-rest</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Generate pojos from an openapi definition -->
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <version>${openapi.codegen.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>${project.basedir}/src/main/resources/api-definitions/basic-api.yaml</inputSpec>
                                    <generatorName>jaxrs-cxf</generatorName>
                                    <generateApis>false</generateApis>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <modelPackage>${package}.rest.model</modelPackage>
                                    <apiPackage>${package}.rest.api</apiPackage>
                                    <output>${project.build.directory}/generated-sources/jaxrs</output>
                                    <generateApiTests>false</generateApiTests>
                                    <!-- See https://openapi-generator.tech/docs/generators/jaxrs-cxf
                                         or enable to print the documentation:

                                        <configHelp>true</configHelp>
                                    -->
                                    <configOptions>
                                        <serializableModel>true</serializableModel>
                                        <sourceFolder>src/main/java</sourceFolder>
                                        <implFolder>src/main/java</implFolder>
                                        <java8>true</java8>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

#if (${cxfSupport} == 'true')
        <!-- Generate code from a wsdl -->
        <profile>
            <id>cxfgen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.redhat-fuse</groupId>
                        <artifactId>cxf-codegen-plugin</artifactId>
                        <version>${fuse.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>wsdl2java</goal>
                                </goals>
                                <configuration>
                                    <sourceRoot>${project.build.directory}/generated-sources/jaxws</sourceRoot>
                                    <wsdlOptions>
                                        <wsdlOption>
                                            <wsdl>${basedir}/src/main/resources/wsdl/contract.wsdl</wsdl>
                                            <wsdlLocation>classpath:wsdl/contract.wsdl</wsdlLocation>
                                            <bareMethods></bareMethods>
                                        </wsdlOption>
                                    </wsdlOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
#end
    </profiles>

    <repositories>
        <repository>
            <id>red-hat-ga-repository</id>
            <url>https://maven.repository.redhat.com/ga</url>
        </repository>

        <repository>
            <id>red-hat-early-access-repository</id>
            <url>https://maven.repository.redhat.com/earlyaccess/all</url>
        </repository>

        <repository>
            <id>jboss-early-access-repository</id>
            <url>https://repository.jboss.org/nexus/content/groups/ea</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>red-hat-ga-repository</id>
            <url>https://maven.repository.redhat.com/ga</url>
        </pluginRepository>

        <pluginRepository>
            <id>red-hat-early-access-repository</id>
            <url>https://maven.repository.redhat.com/earlyaccess/all</url>
        </pluginRepository>

        <pluginRepository>
            <id>jboss-early-access-repository</id>
            <url>https://repository.jboss.org/nexus/content/groups/ea</url>
        </pluginRepository>
    </pluginRepositories>
</project>